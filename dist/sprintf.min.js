/*! sprintf-js v1.1.1 | Copyright (c) 2007-present, Alexandru Mărășteanu <hello@alexei.ro> | BSD-3-Clause */
!function(){"use strict";function e(e){return n(t(e),arguments)}function r(r,n){return e.apply(null,[r].concat(n||[]))}function n(r,n){var t,o,a,p,c,f,l,u,d=1,g=r.length,b="";for(o=0;o<g;o++)if("string"==typeof r[o])b+=r[o];else if("object"==typeof r[o]){if(p=r[o],u=p.type,p.keys)for(t=n[d],a=0;a<p.keys.length;a++){if(!t.hasOwnProperty(p.keys[a]))throw new Error(e('[sprintf] property "%s" does not exist',p.keys[a]));t=t[p.keys[a]]}else t=p.param_no?n[p.param_no]:n[d++];if(l=e.modules[u])t=l(p,t),b+=i(p,"",t=p.precision?t.substring(0,p.precision):t);else{if(s.not_type.test(u)&&s.not_primitive.test(u)&&t instanceof Function&&(t=t()),s.numeric_arg.test(u)&&"number"!=typeof t&&isNaN(t))throw new TypeError(e("[sprintf] expecting number but found %T",t));switch(s.number.test(u)&&(c=t>=0),u){case"b":t=parseInt(t,10).toString(2);break;case"c":t=String.fromCharCode(parseInt(t,10));break;case"d":case"i":t=parseInt(t,10);break;case"j":t=JSON.stringify(t,null,p.width?parseInt(p.width):0);break;case"e":t=p.precision?parseFloat(t).toExponential(p.precision):parseFloat(t).toExponential();break;case"f":t=p.precision?parseFloat(t).toFixed(p.precision):parseFloat(t);break;case"g":t=p.precision?String(Number(t.toPrecision(p.precision))):parseFloat(t);break;case"o":t=(parseInt(t,10)>>>0).toString(8);break;case"s":t=String(t),t=p.precision?t.substring(0,p.precision):t;break;case"t":t=String(!!t),t=p.precision?t.substring(0,p.precision):t;break;case"T":t=Object.prototype.toString.call(t).slice(8,-1).toLowerCase(),t=p.precision?t.substring(0,p.precision):t;break;case"u":t=parseInt(t,10)>>>0;break;case"v":t=t.valueOf(),t=p.precision?t.substring(0,p.precision):t;break;case"x":t=(parseInt(t,10)>>>0).toString(16);break;case"X":t=(parseInt(t,10)>>>0).toString(16).toUpperCase()}s.json.test(u)?b+=t:(!s.number.test(u)||c&&!p.sign?f="":(f=c?"+":"-",t=t.toString().replace(s.sign,"")),b+=i(p,f,t))}}return b}function t(r){if(o[r])return o[r];for(var n,t,i=r,a=[],p=0;i;){if(null!==(n=s.text.exec(i)))a.push(n[0]);else if(null!==(n=s.modulo.exec(i)))a.push("%");else{if(null===(n=s.placeholder.exec(i)))throw new SyntaxError("[sprintf] unexpected placeholder");if(n[2]){p|=1;var c=[],f=n[2],l=[];if(null===(l=s.key.exec(f)))throw new SyntaxError("[sprintf] failed to parse named argument key");for(c.push(l[1]);""!==(f=f.substring(l[0].length));)if(null!==(l=s.key_access.exec(f)))c.push(l[1]);else{if(null===(l=s.index_access.exec(f)))throw new SyntaxError("[sprintf] failed to parse named argument key");c.push(l[1])}n[2]=c}else p|=2;if(3===p)throw new Error("[sprintf] mixing positional and named placeholders is not (yet) supported");if(t=n[9],!s.embedded_specifier.test(t)&&!e.modules[t])throw new SyntaxError(e("[sprintf] unknown type specifier '%s'",t));a.push({placeholder:n[0],param_no:n[1],keys:n[2],sign:n[3],pad_char:n[4],align:n[5],width:n[6],precision:n[7],format:n[8],type:t})}i=i.substring(n[0].length)}return o[r]=a}function i(e,r,n){var t=e.pad_char?"0"===e.pad_char?"0":e.pad_char.charAt(1):" ",i=e.width-(r+n).length,s=e.width&&i>0?t.repeat(i):"";return e.align?r+n+s:"0"===t?r+s+n:s+r+n}var s={not_string:/[^s]/,not_bool:/[^t]/,not_type:/[^T]/,not_primitive:/[^v]/,number:/[diefg]/,numeric_arg:/[bcdiefguxX]/,json:/[j]/,not_json:/[^j]/,text:/^[^\x25]+/,modulo:/^\x25{2}/,specifier:/^[a-zA-Z]$/,embedded_specifier:/^[b-gijostTuvxX]$/,placeholder:/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?(?:\[([^\]]*)\])?([a-zA-Z])/,key:/^([a-z_][a-z_\d]*)/i,key_access:/^\.([a-z_][a-z_\d]*)/i,index_access:/^\[(\d+)\]/,sign:/^[\+\-]/},o=Object.create(null);e.register_extension=function(r,n){if(!s.specifier.test(r))throw new TypeError("[sprintf] invalid specifier");e.modules[r]=n},e.modules=Object.create(null),"undefined"!=typeof exports&&(exports.sprintf=e,exports.vsprintf=r),"undefined"!=typeof window&&(window.sprintf=e,window.vsprintf=r,"function"==typeof define&&define.amd&&define(function(){return{sprintf:e,vsprintf:r}}))}();
//# sourceMappingURL=sprintf.min.js.map
